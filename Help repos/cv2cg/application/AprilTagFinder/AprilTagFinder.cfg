ImageSource= {
# whether to pause the first frame of the image source
	pause=0
# whether to loop the image source when reach it end
	loop=0
}

AprilTagprocessor= {
#visualization
	tagTextScale=0.4
	tagTextThickness=1

#when using photo or list as image source,
#if need each frame to be considered,
#set the following to be true/1
	useEachValidPhoto=1

#when log, whether to log the frame with homography visualization
	logVisFrame=1

#reject if detection.hammingDistance>hammingThresh
	hammingThresh=0

#whether to undistort each frame before detection
#will be automatically set to false if all distCoeffs are zero
#or distCoeffs are not specified
	undistortImage=0
	
	segDecimate=0

#whether to log even if there is no valid detections
#in the current frame
	doLogIfNoValidDetections=0
}

#optional, for undistort the tag detections
#K is the calibration matrix: K[0][0] K[0][1] ... K[2][2]
#distCoeffs are the distortion parameters: k1,k2,p1,p2,k3
K=[1664.010615128407, 0, 667.9657771371558;
  0, 1668.819944196452, 457.9230104705811;
  0, 0, 1];
distCoeffs=[-0.2237256636237109; 0.2343996528647796; 0; 0; 0];

#where to log data
outputDir=.

#optional, for optimized tag pose using a set of markers:
#optimizeMethod: 
# lm(0)   : Levenberg-Maquart Method (default method)
# epnp(1) : efficient PnP method from ETHZ
# cam(2)  : optimize both tag pose and K matrix together
# raw(3) : no non-linear optimization, just use all point for homography calc
# none(4) : no tag pose optimization
markerSets = [
	{ optimizeMethod=0, name=alltags, markerNames=[ Tag36h11.152, Tag36h11.153, Tag36h11.154, Tag36h11.155 ],
	  markerCorners=[ -133.500000, -133.500000, 0.000000, 133.500000, -133.500000, 0.000000, 133.500000, 133.500000, 0.000000, -133.500000, 133.500000, 0.000000, 166.500000, -133.500000, 0.000000, 433.500000, -133.500000, 0.000000, 433.500000, 133.500000, 0.000000, 166.500000, 133.500000, 0.000000, -133.500000, -433.500000, 0.000000, 133.500000, -433.500000, 0.000000, 133.500000, -166.500000, 0.000000, -133.500000, -166.500000, 0.000000, 166.500000, -433.500000, 0.000000, 433.500000, -433.500000, 0.000000, 433.500000, -166.500000, 0.000000, 166.500000, -166.500000, 0.000000 ]; }
	{ optimizeMethod=0, name=building, markerNames=[ Tag36h11.152, Tag36h11.153 ],
	  markerCorners=[ -133.500000, -133.500000, 0.000000, 133.500000, -133.500000, 0.000000, 133.500000, 133.500000, 0.000000, -133.500000, 133.500000, 0.000000, 166.500000, -133.500000, 0.000000, 433.500000, -133.500000, 0.000000, 433.500000, 133.500000, 0.000000, 166.500000, 133.500000, 0.000000 ]; }
	{ optimizeMethod=0, name=material, markerNames=[ Tag36h11.154, Tag36h11.155 ],
	  markerCorners=[ -133.500000, -133.500000, 0.000000, 133.500000, -133.500000, 0.000000, 133.500000, 133.500000, 0.000000, -133.500000, 133.500000, 0.000000, 166.500000, -133.500000, 0.000000, 433.500000, -133.500000, 0.000000, 433.500000, 133.500000, 0.000000, 166.500000, 133.500000, 0.000000 ]; }
	{ optimizeMethod=0, name=block0, markerNames=[ Tag36h9.0, Tag36h9.3 ],
	  markerCorners=[ -28.00, 7.50, 0.00, 28.00, 7.50, 0.00, 28.00, 63.50, 0.00, -28.00, 63.50, 0.00, -28.00, -63.50, 0.00, 28.00, -63.50, 0.00, 28.00, -7.50, 0.00, -28.00, -7.50, 0.00 ]; }
]